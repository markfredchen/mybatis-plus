buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        //noinspection DifferentKotlinGradleVersion
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.10'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
    }
}

ext {
    configuration = [
        javaVersion = JavaVersion.VERSION_1_8
    ]

    libraries = [
        mybatisSpringVersion = '1.3.2',
        mybatisVersion = '3.4.6',
        springVersion = '5.1.2.RELEASE',
        jsqlparserVersion = '1.3',
    ]

    lib = [
        "kotlin-reflect"        : "org.jetbrains.kotlin:kotlin-reflect:1.3.10",
        "kotlin-stdlib-jdk8"    : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.10",
        "jsqlparser"            : "com.github.jsqlparser:jsqlparser:${jsqlparserVersion}",
        "mybatis-spring"        : "org.mybatis:mybatis-spring:${mybatisSpringVersion}",
        "mybatis"               : "org.mybatis:mybatis:${mybatisVersion}",
        "spring-context-support": "org.springframework:spring-context-support:${springVersion}",
        "spring-jdbc"           : "org.springframework:spring-jdbc:${springVersion}",
        "spring-tx"             : "org.springframework:spring-tx:${springVersion}",
        "spring-web"            : "org.springframework:spring-web:${springVersion}",
        "spring-aop"            : "org.springframework:spring-aop:${springVersion}",
        "cglib"                 : "cglib:cglib:3.2.6",
        "lombok"                : "org.projectlombok:lombok:1.18.4",

        "javax.servlet-api"     : "javax.servlet:javax.servlet-api:4.0.1",
        "aspectjweaver"         : "org.aspectj:aspectjweaver:1.8.9",
        "mockito"               : "org.mockito:mockito-core:2.13.0",
        "mybatis-ehcache"       : "org.mybatis.caches:mybatis-ehcache:1.1.0",
        "slf4j-api"             : "org.slf4j:slf4j-api:1.7.25",
        "logback-classic"       : "ch.qos.logback:logback-classic:1.2.3",
        //test
        "spring-test"           : "org.springframework:spring-test:${springVersion}",
        "junit"                 : "junit:junit:4.12",
        "mockito-all"           : "org.mockito:mockito-all:1.10.19",
        "fastjson"              : "com.alibaba:fastjson:1.2.49",
        "jackson"               : "com.fasterxml.jackson.core:jackson-databind:2.9.6",
        "tomcatjdbc"            : "org.apache.tomcat:tomcat-jdbc:9.0.2",
        //datasource
        "hikaricp"              : "com.zaxxer:HikariCP:2.7.0",
        "druid"                 : "com.alibaba:druid:1.0.29",
        "commons-dbcp2"         : "org.apache.commons:commons-dbcp2:2.1.1",
        "sqlserver"             : "com.microsoft.sqlserver:sqljdbc4:4.0",
        "postgresql"            : "org.postgresql:postgresql:9.4.1212",
        "oracle"                : fileTree(dir: 'libs', includes: ['ojdbc-11.2.0.3-jdk16.jar']),
        "h2"                    : "com.h2database:h2:1.4.194",
        "mysql"                 : "mysql:mysql-connector-java:5.1.38",
        //code generator
        "velocity"              : "org.apache.velocity:velocity-engine-core:2.0",
        "freemarker"            : "org.freemarker:freemarker:2.3.9",
        "beetl"                 : "com.ibeetl:beetl:2.9.6",
    ]
}

allprojects {
    group = 'com.baomidou'
    version = '3.0.8.2-SNAPSHOT'
}

description = "Mybatis 增强工具包 - 只做增强不做改变，简化CRUD操作"

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.deprecation = true
        options.compilerArgs += ["-parameters"]
    }

    jar {
        afterEvaluate {
            manifest {
                attributes 'Implementation-Version': version
            }
        }
    }

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/contencommons-dbcpt/groups/public/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://www.cameliatk.jp/maven2/repository/thirdparty" }
        jcenter()
    }

    dependencies {
        annotationProcessor "${lib.lombok}"
        implementation "${lib.lombok}"
        testAnnotationProcessor "${lib.lombok}"
        testCompileOnly "${lib.'mockito-all'}"
        testCompile "${lib.junit}"
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allJava
    }

    javadoc {
        afterEvaluate {
            configure(options) {
                encoding "UTF-8"
                charSet 'UTF-8'
                author true
                version true
                failOnError false
                links "http://docs.oracle.com/javase/8/docs/api"
            }
        }
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from javadoc
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    tasks.whenTaskAdded { task ->
        if (task.name.contains('signMavenJavaPublication')) {
            task.enabled = new File(project.property('signing.secretKeyRingFile') as String).isFile()
        }
    }

    publishing {

        repositories {
            maven {
                def userName = System.getProperty("un")
                def passWord = System.getProperty("ps")
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username userName
                    password passWord
                }
            }
        }
        publications {

            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = 'mybatis-plus'
                    packaging 'jar'
                    description = 'An enhanced toolkit of Mybatis to simplify development.'
                    url = 'https://github.com/baomidou/mybatis-plus'

                    scm {
                        connection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
                        developerConnection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
                        url = 'https://github.com/baomidou/mybatis-plus'
                    }

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'baomidou'
                            name = 'hubin'
                            email = 'jobob@qq.com'
                        }
                    }

                    withXml {
                        def root = asNode()
                        root.dependencies.'*'.findAll {
                            def d = it
                            d.scope.text() == 'runtime' && project.configurations.findByName("implementation").allDependencies.find { dep ->
                                dep.name == it.artifactId.text()
                            }.each() {
                                if (d.artifactId.text() != 'lombok') {
                                    d.scope*.value = 'compile'
                                    d.appendNode('optional', true)
                                } else {
                                    d.scope*.value = 'provided'
                                }
                            }
                        }
                    }
                }
            }
        }

        signing {
            sign publishing.publications.mavenJava
        }
    }
}
